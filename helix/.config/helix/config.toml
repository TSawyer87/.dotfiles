# theme = "catppuccin_macchiato"
theme = "tokyonight"

[editor]
line-number = "relative"
mouse = false
auto-completion = true
auto-format = true
cursorline = true
# cursorcolumn = true
color-modes = true
true-color = true
completion-timeout = 15
rulers = [80]
bufferline = "multiple"
jump-label-alphabet = "jfkdls;aurieowpqnvmcxz"
default-yank-register = "+"
# end-of-line-diagnostics = "hint"

[editor.inline-diagnostics]
# cursor-line = "error"
cursor-line = "warning"
other-lines = "error"
max-diagnostics = 2

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.soft-wrap]
enable = true
# wrap-at-text-width = true
wrap-indicator = ""
[editor.statusline]
left = ["mode", "spinner"]
center = ["file-name"]
right = [
  "diagnostics",
  "workspace-diagnostics",
  "selections",
  "file-type",
  "file-encoding",
  "position-percentage",
  "position",
]

[editor.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'

[editor.gutters]
layout = ["diff", "diagnostics", "line-numbers", "spacer"]

[editor.lsp]
auto-signature-help = true
display-messages = true
display-inlay-hints = true

[editor.smart-tab]
enable = true
supersede-menu = true

[editor.indent-guides]
render = true
character = "╎" # Some characters that work well: "▏", "┆", "┊", "⸽"
skip-levels = 1

[keys.normal]
ins = "insert_mode"
esc = ["collapse_selection", "keep_primary_selection"]
C-o = ":open ~/.config/helix/config.toml" # Maps Ctrl-o to opening of the helix config file
C-r = ":config-reload"
C-y = [
  ':sh rm -f /tmp/unique-file',
  ':insert-output yazi %{buffer_name} --chooser-file=/tmp/unique-file',
  ':insert-output echo "\x1b[?1049h\x1b[?2004h" > /dev/tty',
  ':open %sh{cat /tmp/unique-file}',
  ':redraw',
]
"A-x" = "@x<A-d>" # maps Alt-x to a macro selecting the whole line and deleting it without yanking it
H = ":buffer-previous"
L = ":buffer-next"
C-q = ":buffer-close"
space."." = ":fmt"

g = { a = "code_action" } # ga to open code actions
X = "extend_line_above" # Shift+x to select the whole line above
D = [
  "extend_to_line_end",
  "change_selection",
] # Wipe and edit the current line from cursor position
# c = ["trim_selections", "change_selection"] # Make 'c' automatically strip the selection of extra whitespace
# a = ["append_mode", "collapse_selection"] # Remove the selection when entering insert mode with 'a'
"tab" = "goto_next_function"   # Select and jump to the next function via Treesitter
"S-tab" = "goto_prev_function" # Select and jump to the previous function via Treesitter 
# Use system clipboard
p = "paste_clipboard_before"
y = "yank_main_selection_to_clipboard"

# https://github.com/helix-editor/helix/discussions/7908
space.x = ":toggle whitespace.render all none"

# Mark line and move with them up/down
# https://github.com/helix-editor/helix/discussions/5764#discussioncomment-4840408
C-j = ["extend_to_line_bounds", "delete_selection", "paste_after"]
C-k = [
  "extend_to_line_bounds",
  "delete_selection",
  "move_line_up",
  "paste_before",
]

# Duplicate lines up/down
# https://github.com/helix-editor/helix/issues/3680#issuecomment-1399443274
# Also in [keys.insert]
S-A-down = [
  "normal_mode",
  "extend_to_line_bounds",
  "yank",
  "open_below",
  "replace_with_yanked",
  "collapse_selection",
]
S-A-up = [
  "normal_mode",
  "extend_to_line_bounds",
  "yank",
  "open_above",
  "replace_with_yanked",
  "collapse_selection",
]

S-space = ["half_page_up"]

[keys.normal.z]
j = "scroll_up"
k = "scroll_down"
#[keys.normal.space]
#space."." = "file_picker_in_current_buffer_directory"
[keys.normal."+"]
b = ":run-shell-command cargo build"
r = ":run-shell-command cargo run"
t = ":run-shell-command cargo test"

[keys.insert]
C-space = "completion"
# Move cursor in insert mode
A-j = "move_line_down"
A-h = "move_char_left"
A-k = "move_line_up"
A-l = "move_char_right"
A-o = "open_below"
A-O = "open_above"

[editor.file-picker]
hidden = false

# [extensions]
# my_status_line = {
# enabled = true,
# command = ["/home/jr/.helix/helix_status.sh"]
# }
